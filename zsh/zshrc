HISTFILE=$XDG_DATA_HOME/zsh/histfile
HISTSIZE=100000
SAVEHIST=10000

setopt incappendhistory autocd extendedglob
unsetopt beep nomatch notify
bindkey -v

setopt prompt_subst

zstyle ':completion:*' completer _complete _ignored
zstyle :compinstall filename "$ZDOTDIR/.zshrc"


fpath=($ZDOTDIR/completions $fpath)
fpath=($ZDOTDIR/zfunc $fpath)
autoload -Uz compinit
compinit -d $XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION

autoload -U bashcompinit
bashcompinit

setopt NO_HUP

# Disable c-s hanging of terminal
stty -ixon

# Tab completion for cd ..

zstyle ':completion:*' special-dirs true

# Bindings

bindkey '^p' up-history
bindkey '^n' down-history
bindkey '^?' backward-delete-char
bindkey '^d' delete-char
bindkey '^[d' delete-word
# bindkey '^h' backward-delete-char
# bindkey '^k' kill-line
# bindkey '^j' accept-line
# bindkey '^l' clear-screen
bindkey '^y' yank
bindkey '^w' backward-kill-word
bindkey '^b' backward-char
bindkey '^[b' backward-word
bindkey '^f' forward-char
bindkey '^[f' forward-word
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# Visual mode fixes
export KEYTIMEOUT=1

#Configurations
conf() {
  cd $HOME/workspace/nixfiles
  f=$(fd -t f . | fzf)
  sha1=$(sha1sum $f | awk '{print $1}')
  nvim $f
  newsha1=$(sha1sum $f | awk '{print $1}')
  test $sha1 != $newsha1 && home-manager switch
  cd - 1>/dev/null
}

# Python virtualenv
export WORKON_HOME=$XDG_DATA_HOME/virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
source ~/.local/bin/virtualenvwrapper.sh

# Base16 Shell
. "$HOME/.local/bin/base16-theme.sh"

# forgit
if [ ! -f $ZDOTDIR/forgit/forgit.plugin.zsh ]; then
  git clone https://github.com/wfxr/forgit $ZDOTDIR/forgit/
fi
source $ZDOTDIR/forgit/forgit.plugin.zsh

# Bitwarden
command -v bw >/dev/null && eval "$(bw completion --shell zsh); compdef _bw bw;"

# Vim mode improvements
export KEYTIMEOUT=10
bindkey -M viins 'jk' vi-cmd-mode


function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip

# Notes
export NOTES_DIR=$XDG_DATA_HOME/notes
export ZETTEL_DIR=$NOTES_DIR/zettelkasten

# pipenv completion
export PIPENV_VENV_IN_PROJECT=1
command -v pipenv >/dev/null && eval "$(_PIPENV_COMPLETE=zsh_source pipenv)"

# klog completion
command -v klog >/dev/null && source <(klog completion -c zsh)

function preexec() {
    _tmux_update_env
    _update_agents
}

export DO_NOT_TRACK=1

#----Machine-specific----
test -f $ZDOTDIR/machine_specific && source $ZDOTDIR/machine_specific
