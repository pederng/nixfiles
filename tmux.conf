set -g status-interval 5
set -g status-style bg="colour18"
set -g message-command-style fg="colour7"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-style fg="colour4"
set -g status-right-length "100"
set -g status-right attr="none"
set -g message-style fg="colour7"
set -g message-style bg="colour19"
set -g message-command-style bg="colour19"
# set -g status attr="none"
set -g pane-border-style fg="colour19"
set -g status-left attr="none"
setw -g window-status-style fg="colour15"
setw -g window-status-activity-style bg="colour18"
setw -g window-status-activity-style fg="colour4"
setw -g window-status-separator ""
setw -g window-status-style bg="colour18"
set -g status-left "#[fg=colour0,bg=colour4] #S"
set -ag status-left "#[fg=colour4,bg=colour18]î‚°"
set -g status-right "#[fg=colour19,bg=colour18]î‚²"
set -ag status-right "#[fg=colour7,bg=colour19] ðŸ–¥ #(hostname) | ï‹› #(getmem)% | ðŸ’½#(getdisk) | âš– #(getcpu) | ï›¿ #(getip) "
set -ag status-right "#[fg=colour4,bg=colour19]î‚²#[fg=colour0,bg=colour4] %a %b %e %R "
setw -g window-status-format "#[fg=colour18,bg=colour18]î‚°#[default] #I #W #[fg=colour18,bg=colour18]î‚°"
setw -g window-status-current-format "#[fg=colour18,bg=colour19]î‚°#[fg=colour7,bg=colour19] #I #W #[fg=colour19,bg=colour18]î‚°"

# C-b is not acceptable -- Vim uses it
unbind C-b
set -g prefix C-Space
bind-key C-Space last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-style bg=blue

set -g status-keys emacs
set -g focus-events on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# hjkl pane resize
bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

# bind C-h select-pane -L
# bind C-j select-pane -D
# bind C-k select-pane -U
# bind C-l select-pane -R
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# bind space select-pane -l

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

is_mutt="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(neo)?mutt$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
													tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
												 ($is_fzf && tmux send-keys C-j) || \
												 ($is_mutt && tmux send-keys C-j) || \
												 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
													($is_fzf && tmux send-keys C-k)  || \
                          ($is_mutt && tmux send-keys C-k) || \
													tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
													tmux select-pane -R"

# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# History
set-option -g history-limit 5000

# Fix ssh auth socket
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

#bells
set-option -g bell-action any

# reload config
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename on

bind i attach-session -c "#{pane_current_path}"

# color
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",st-256color:Tc"

bind-key f run "tmux split-window -l 12 'zsh -ci ftwind'"

# copying output
bind-key O run "tmux-capture | find-urls | open-url"
bind-key Y run "tmux-capture | find-urls | copy-url > /dev/null"
bind-key C run "tmux-capture | st-copyout > /dev/null"

# Pane switching
if-shell '[ -f ~/.local/bin/fzf-panes.tmux ]' {
		set-hook -g pane-focus-in[10] \
		"run -b 'bash ~/.local/bin/fzf-panes.tmux update_mru_pane_ids'"
		bind w run -b 'bash ~/.local/bin/fzf-panes.tmux new_window'
		bind \; run -b 'bash ~/.local/bin/fzf-panes.tmux select_last_pane'
} {
		set-hook -ug pane-focus-in[10]
		bind w choose-tree -Z
}


# thumbs quick copying
run-shell $XDG_CONFIG_HOME/tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

set -g @thumbs-alphabet qwerty-homerow
set -g @thumbs-bg-color blue
set -g @thumbs-fg-color green
set -g @thumbs-hint-bg-color black
set -g @thumbs-hint-fg-color yellow
